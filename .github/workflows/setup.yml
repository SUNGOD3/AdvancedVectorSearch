name: Reusable Setup Workflow

on:
  workflow_call:
    inputs:
      python-version:
        type: string
        default: '3.8'
      install-dev-deps:
        type: boolean
        default: true

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python ${{ inputs.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ inputs.python-version }}
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install "pybind11[global]"
          pip install -r requirements.txt
          
          if [ "${{ inputs.install-dev-deps }}" = "true" ]; then
            pip install pybind11 numpy coverage
          fi
      
      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y cmake lcov
      
      - name: Run Specific Job
        run: |
          if [[ "${{ github.workflow }}" == "CI/CD Pipeline" ]]; then
            if [[ "${{ github.job }}" == "cpp-tests" ]]; then
              mkdir -p build
              cd build
              cmake -DCMAKE_BUILD_TYPE=Debug ..
              make
              ctest
              
              # Generate C++ coverage report
              lcov --capture --directory . --output-file coverage.info
              lcov --remove coverage.info '/usr/*' --output-file coverage.info
              lcov --list coverage.info
              
              # Upload artifact
              cd ..
              mkdir -p build
              cp build/coverage.info build/
              
            elif [[ "${{ github.job }}" == "python-tests" ]]; then
              python tests/coverage_report.py
              
            elif [[ "${{ github.job }}" == "benchmarks" ]]; then
              python benchmarks/run_benchmarks.py
            fi
          fi
      
      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.job }}-report
          path: |
            ${{ github.job == 'cpp-tests' && 'build/coverage.info' || '' }}
            ${{ github.job == 'python-tests' && 'coverage_html\ncoverage.xml' || '' }}
            ${{ github.job == 'benchmarks' && 'benchmarks/results.json' || '' }}